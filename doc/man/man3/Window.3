.TH "Window" 3 "Mon Apr 22 2019" "Version 1.1" "Timberman" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Window
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <window\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBWindow\fP ()"
.br
.RI "Default constructor for window\&. "
.ti -1c
.RI "\fBWindow\fP (const std::string &title, const sf::Vector2u &size)"
.br
.RI "Constructor with parameters for calling the setup method\&. "
.ti -1c
.RI "\fB~Window\fP ()"
.br
.ti -1c
.RI "void \fBbegin_draw\fP ()"
.br
.RI "Function to start drawing (clears the screen) "
.ti -1c
.RI "void \fBend_draw\fP ()"
.br
.RI "Function to end drawing (displays everything that's been drawed) "
.ti -1c
.RI "void \fBhandle_events\fP (sf::Event &event)"
.br
.RI "Function to poll events and handle them\&. "
.ti -1c
.RI "bool \fBis_done\fP ()"
.br
.RI "Function to check if we should close the window\&. "
.ti -1c
.RI "sf::Event & \fBget_event\fP ()"
.br
.RI "Function to get the event member variable\&. "
.ti -1c
.RI "sf::RenderWindow * \fBget_render_window\fP ()"
.br
.RI "Function to get the current window\&. "
.ti -1c
.RI "sf::Vector2u \fBget_window_size\fP ()"
.br
.RI "Function to get the window size\&. "
.ti -1c
.RI "void \fBdraw\fP (sf::Drawable &asset)"
.br
.RI "Function to draw everything to the screen\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 55 of file window\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Window::Window ()"

.PP
Default constructor for window\&. 
.PP
Definition at line 3 of file window\&.cc\&.
.PP
.nf
3                {
4     this->setup("Window", {640, 480});
5 }
.fi
.SS "Window::Window (const std::string & title, const sf::Vector2u & size)"

.PP
Constructor with parameters for calling the setup method\&. 
.PP
\fBParameters:\fP
.RS 4
\fItitle\fP \fBWindow\fP title 
.br
\fIsize\fP \fBWindow\fP size 
.RE
.PP

.PP
Definition at line 7 of file window\&.cc\&.
.PP
.nf
7                                                              {
8     this->setup(title, size);
9 }
.fi
.SS "Window::~Window ()"

.PP
Definition at line 11 of file window\&.cc\&.
.PP
.nf
11                 {
12     this->destroy();
13 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void Window::begin_draw ()"

.PP
Function to start drawing (clears the screen) 
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 49 of file window\&.cc\&.
.PP
Referenced by Game::render()\&.
.PP
.nf
49                         {
50     m_window\&.clear(sf::Color::Black);
51 }
.fi
.SS "void Window::draw (sf::Drawable & asset)"

.PP
Function to draw everything to the screen\&. 
.PP
\fBParameters:\fP
.RS 4
\fIasset\fP Any asset that is child of Drawable 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 65 of file window\&.cc\&.
.PP
.nf
65                                    {
66     m_window\&.draw(asset);
67 }
.fi
.SS "void Window::end_draw ()"

.PP
Function to end drawing (displays everything that's been drawed) 
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 53 of file window\&.cc\&.
.PP
Referenced by Game::render()\&.
.PP
.nf
53                       {
54     m_window\&.display();
55 }
.fi
.SS "sf::Event Window::get_event ()"

.PP
Function to get the event member variable\&. 
.PP
\fBReturns:\fP
.RS 4
Reference to the event member variable 
.RE
.PP

.PP
Definition at line 73 of file window\&.cc\&.
.PP
Referenced by Game::handle_events()\&.
.PP
.nf
73                            {
74     return(m_event);
75 }
.fi
.SS "sf::RenderWindow * Window::get_render_window ()"

.PP
Function to get the current window\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to the window 
.RE
.PP

.PP
Definition at line 69 of file window\&.cc\&.
.PP
Referenced by Game::handle_events(), and Game::render()\&.
.PP
.nf
69                                           {
70     return(&m_window);
71 }
.fi
.SS "sf::Vector2u Window::get_window_size ()"

.PP
Function to get the window size\&. 
.PP
\fBReturns:\fP
.RS 4
Returns the dimensions of the window as Vector2u 
.RE
.PP

.PP
Definition at line 61 of file window\&.cc\&.
.PP
Referenced by Game::update()\&.
.PP
.nf
61                                    {
62     return(m_wsize);
63 }
.fi
.SS "void Window::handle_events (sf::Event & event)"

.PP
Function to poll events and handle them\&. 
.PP
\fBParameters:\fP
.RS 4
\fIevent\fP Current event to handle 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 22 of file window\&.cc\&.
.PP
References M_VIEW_X, and M_VIEW_Y\&.
.PP
Referenced by Game::handle_events()\&.
.PP
.nf
22                                          {
23     switch(event\&.type) {
24         case sf::Event::Closed:
25             m_done = true;
26             break;
27         case sf::Event::KeyPressed:
28             if(event\&.key\&.code == sf::Keyboard::Escape)
29                 m_done = true;
30             break;
31     }
32 }
.fi
.SS "bool Window::is_done ()"

.PP
Function to check if we should close the window\&. 
.PP
\fBReturns:\fP
.RS 4
true if we should close, false otherwise 
.RE
.PP

.PP
Definition at line 57 of file window\&.cc\&.
.PP
Referenced by main()\&.
.PP
.nf
57                      {
58     return(m_done);
59 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Timberman from the source code\&.
